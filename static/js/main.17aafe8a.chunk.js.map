{"version":3,"sources":["Content.tsx","HistoryFiles.ts","HistoryViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Topics","props","topic","selectItem","name","items","map","item","href","onClick","e","preventDefault","Content","topics","nodeToText","node","type","data","children","join","getIdFromGoogleLink","link","matches1","match","matches2","matches3","replace","HistoryViewer","initialItem","onClickUrl","useState","html","setHtml","useEffect","undefined","headers","Headers","append","fetch","id","Math","floor","random","redirect","then","response","text","React","useCallback","element","tagName","domToReact","attributesToProps","attribs","style","cursor","parsed","parse","App","setTopics","historyItem","setHistoryItem","useMemo","some","Error","getTopicFromItem","console","log","domTree","htmlToDOM","length","htmlRoot","body","find","child","allTopics","pushTopic","push","childElement","topicTitle","url","loadHistoryItems","nextItem","getHistoryItemById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17aafe8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { HistoryItem, HistoryTopic } from './HistoryFiles';\r\n\r\nconst Topics: React.FunctionComponent<{\r\n    topic: HistoryTopic\r\n    selectItem: (item: HistoryItem) => void;\r\n}> = props => {\r\n    const {topic, selectItem} = props;\r\n    return (\r\n        <>\r\n            {topic.name}\r\n            <ul>\r\n                {topic.items.map(item => <li key={`navlink-${item.name}`} >\r\n                    <a href={`#${topic.name}/${item.name}`} onClick={(e) => {\r\n                        e.preventDefault();\r\n                        selectItem(item);\r\n                    }}>{item.name}</a>\r\n                </li>)}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\nconst Content: React.FunctionComponent<{\r\n    topics: HistoryTopic[];\r\n    selectItem: (item: HistoryItem) => void;\r\n}> = props => {\r\n    const {topics, selectItem} = props;\r\n    return (<>\r\n        {topics.map(topic => <Topics key={`topic-${topic.name}`} topic={topic} selectItem={selectItem}/>)}\r\n    </>)\r\n};\r\n\r\nexport default Content;","import { htmlToDOM } from \"html-react-parser\";\r\nimport {\r\n    Element,\r\n    Node,\r\n    Text\r\n} from 'domhandler';\r\n\r\nconst globalContent = \"https://docs.google.com/document/d/1ltZCNiI154npdUWUAHFuZC-lCZ32fYW7UVEvEru5Xxs/pub?embedded=true\"\r\n\r\nexport interface HistoryTopic {\r\n    name: string;\r\n    items: HistoryItem[];\r\n}\r\n\r\nexport interface HistoryItem {\r\n    name: string;\r\n    id: string;\r\n}\r\n\r\nconst nodeToText = (node: Node): string => {\r\n    if (node.type === \"text\") {\r\n        return (node as Text).data;\r\n    } else if (node.type === \"tag\") {\r\n        const elem = node as Element;\r\n        return elem.children.map(node => nodeToText(node)).join(\"\\n\");\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport function loadHistoryItems(): Promise<HistoryTopic[]> {\r\n    const headers = new Headers();\r\n    headers.append('pragma', 'no-cache');\r\n    headers.append('cache-control', 'no-cache');\r\n\r\n    return fetch(globalContent, {headers}).then(response => response.text())\r\n        .then(html => {\r\n            console.log(html);\r\n            const domTree = htmlToDOM(html);\r\n            if (domTree.length === 0)\r\n                throw new Error(\"Hiba a főtartalomjegyzék feldolgozása közben! html\");\r\n            \r\n            const htmlRoot = domTree[0] as Element;\r\n\r\n            console.log(htmlRoot);\r\n            const body = htmlRoot.children.find(child => child.type === \"tag\" && (child as Element).name === \"body\") as Element | undefined;\r\n            console.log(body);\r\n            if (body === undefined)\r\n                throw new Error(\"Hiba a főtartalomjegyzék feldolgozása közben! body\");\r\n\r\n            const allTopics: HistoryTopic[] = [];\r\n\r\n            let topic: HistoryTopic = {\r\n                name: \"\",\r\n                items: [],\r\n            }\r\n            let item: HistoryItem = {\r\n                name: \"\",\r\n                id: \"\"\r\n            }\r\n\r\n            const pushItem = () => {\r\n                if (item.name.length !== 0 && item.id.length !== 0) {\r\n                    topic.items.push(item);\r\n                    console.log(\"Persisting item: \", item.name);\r\n                }\r\n            }\r\n\r\n            const pushTopic = () => {\r\n                if (topic.name.length !== 0) {\r\n                    allTopics.push(topic);                    \r\n                    console.log(\"Persisting topic: \", topic.name);\r\n                }\r\n            }\r\n\r\n            for (const child of body.children) {\r\n                if (child.type === \"tag\") {\r\n                    const childElement = child as Element;\r\n                    if (childElement.name === \"h1\") {\r\n                        pushTopic();\r\n\r\n                        const topicTitle = nodeToText( childElement);\r\n                        topic = {\r\n                            name: topicTitle,\r\n                            items: []\r\n                        }\r\n                        item = {\r\n                            name: \"\",\r\n                            id: \"\"\r\n                        }\r\n                        console.log(\"Reading topic: \", topic.name);\r\n                    } else if (childElement.name === \"h2\") {\r\n                        console.log(childElement);\r\n                        console.log(\"Reading item: \", item.name);\r\n                        if (childElement.children.length > 0 \r\n                            && childElement.children[0].type === \"tag\"\r\n                            &&  (childElement.children[0] as Element).children.length > 0\r\n                            && (childElement.children[0] as Element).children[0].type === \"tag\") {\r\n                            const url = ((childElement.children[0] as Element).children[0] as Element).attribs['href'] ?? \"\";\r\n                            console.log(url);\r\n                            const id = getIdFromGoogleLink(url);\r\n                            console.log(id);\r\n                            item = {\r\n                                name: nodeToText( childElement),\r\n                                id,\r\n                            }\r\n                            pushItem();\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n            pushTopic();\r\n\r\n            return allTopics;\r\n        })\r\n}\r\n\r\nexport function getTopicFromItem(topics: HistoryTopic[], item: HistoryItem): HistoryTopic {\r\n    for (const topic of topics) {\r\n        if (topic.items.some(match => match === item))\r\n            return topic;\r\n    }\r\n    throw Error(\"No topic found\");\r\n}\r\n\r\nexport function getHistoryItemById(topics: HistoryTopic[], id: string): HistoryItem | undefined {\r\n    for (const topic of topics) {\r\n        for (const item of topic.items) {\r\n            if (item.id === id) \r\n                return item;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function getIdFromGoogleLink(link: string): string {    \r\n    const matches1 = link.match(/d\\/(.*)&sa.*/);\r\n    const matches2 = link.match(/d\\/(.*)\\//);\r\n    const matches3 = link.match(/id%3D(.*)&sa.*/);\r\n    \r\n    const matches = matches1 ?? matches2 ?? matches3 ?? [\"\", \"-\"];\r\n    const id = matches[1]\r\n        .replace(/\\/edit$/, '');\r\n    return id;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { HistoryItem } from './HistoryFiles';\r\nimport \"./HistoryViewer.css\";\r\nimport parse, { attributesToProps, DOMNode, domToReact } from 'html-react-parser';\r\nimport {\r\n    Element,\r\n} from 'domhandler';\r\n\r\nconst HistoryViewer: React.FunctionComponent<{\r\n    initialItem?: HistoryItem,\r\n    onClickUrl: (url: string) => void;\r\n}> = props => {\r\n    const { initialItem, onClickUrl } = props;\r\n    const [html, setHtml] = useState<string>();\r\n    useEffect(() => {\r\n        if (initialItem === undefined)\r\n            return;\r\n        if (html === undefined) {\r\n            const headers = new Headers();\r\n            headers.append('pragma', 'no-cache');\r\n            headers.append('cache-control', 'no-cache');\r\n\r\n            fetch(`https://docs.google.com/document/u/1/d/${initialItem.id}/pub?embedded=true&r=${Math.floor(Math.random() * 10000)}`, {headers, redirect: 'manual'})\r\n                .then(response => response.text())\r\n                .then(html => {\r\n                    setHtml(html);\r\n                })\r\n        }\r\n    }, [html]);\r\n\r\n    const replace: (\r\n        domNode: DOMNode\r\n    ) => JSX.Element | undefined | null = React.useCallback((node: DOMNode) => {\r\n        if (node.type === \"tag\") {\r\n            const element: Element = node as Element;\r\n            if (element.tagName === \"html\" || element.tagName === \"head\") {\r\n                return <>{domToReact(element.children, {replace})}</>;\r\n            }\r\n            if (element.tagName === \"body\") {\r\n                const props = attributesToProps(element.attribs);\r\n                return <div id=\"contentBody\" {...props}>\r\n                    {domToReact(element.children, {replace})}\r\n                </div>\r\n            }\r\n            if (element.tagName === \"a\") {\r\n                return <a style={{cursor: \"pointer\"}} onClick={() => onClickUrl(element.attribs.href)}>\r\n                    {domToReact(element.children, {replace})}\r\n                </a>\r\n            }\r\n        }\r\n        return undefined;\r\n    }, [onClickUrl]);\r\n\r\n    if (initialItem === undefined) {\r\n        return null;\r\n    }\r\n\r\n    if (html === undefined) {\r\n        return (<div>Loading</div>)\r\n    }\r\n\r\n    const parsed = parse(html, {\r\n        replace\r\n    });\r\n\r\n    return (\r\n        <div id=\"reader\">\r\n            {parsed}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HistoryViewer;","import React, { useEffect, useState } from \"react\";\nimport Content from \"./Content\";\nimport { getHistoryItemById, getTopicFromItem, HistoryItem, loadHistoryItems, HistoryTopic, getIdFromGoogleLink } from \"./HistoryFiles\";\nimport HistoryViewer from \"./HistoryViewer\";\nimport './App.css';\n\nconst App: React.FunctionComponent = () => {\n    const [topics, setTopics] = useState<HistoryTopic[]>();\n    const [historyItem, setHistoryItem] = useState<HistoryItem>();\n    const topic = React.useMemo(() => topics !== undefined && historyItem !== undefined\n        ? getTopicFromItem(topics, historyItem)\n        : undefined, [historyItem]);\n\n    const handleUrlClick = (url: string) => {\n        if (topics === undefined) return;\n\n        const id = getIdFromGoogleLink(url);\n        const nextItem = getHistoryItemById(topics, id);\n        console.log(nextItem);\n        if (nextItem) {\n            setHistoryItem(nextItem);\n        }\n    }\n\n    const handleSelectItem = (item: HistoryItem) => {\n        setHistoryItem(item);\n    }\n\n    useEffect(() => {\n        if (topics === undefined) {\n            loadHistoryItems()\n                .then(topics => {\n                    setTopics(topics);\n                    setHistoryItem(topics[0].items[0]);\n                });\n        }\n    }, [topics])\n\n    if (topics === undefined) {\n        return (\n            <>\n                Loading\n            </>\n        )\n    }\n\n    return (\n        <div id=\"content\">\n            <h1>\n                {topic?.name}\n            </h1>\n            <hr />\n            <HistoryViewer key={historyItem?.id ?? \"not-selected\"}\n                initialItem={historyItem}\n                onClickUrl={handleUrlClick}\n            />\n            <hr />\n            <Content topics={topics} selectItem={handleSelectItem}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}